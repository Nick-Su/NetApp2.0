@model IEnumerable<NetApp.Models.Connection>

@{
    ViewBag.Title = "Граф связей";
}

@section scripts {
    <script src="~/Scripts/jquery.signalR-2.4.1.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/signalr/client.js"></script>
    <script src="~/Scripts/signalr/common.js"></script>
}

<h2 class="text-primary">Мои связи</h2>
<hr />

<input type="hidden" class="pageName" value="trustedPage" />
@Html.Partial("_StatusBar")

<p class="text-secondary info">Нажмите на узел графа, чтобы перейти к проекту</p>
<div class="linkNotFound"></div>

<section id="project-graph">
    <!-- Here shows a graph -->
</section>

<script src="~/Scripts/d3js/d3.v5.min.js"></script>
<script src="~/Scripts/d3js/d3.min.js"></script>
<script src="~/Scripts/d3js/d3.v3.min.js"></script>

<script type="text/javascript">


    var links;
    var url = "/Projects/NodeDetails/";
    $('#project-graph').html('<img src="/images/ajax-loader-thin.gif" />');

    function GetUserNodes() {
        $.getJSON('@Url.Action("GetConnectionFromAllGames", "Connections")',
            function (json) {
                var graphNodes = JSON.parse(json);
                if (graphNodes.length == 0) {
                    buildSorryNotFoundLinks();
                }

                buildGraph(graphNodes);
            });
    }

    function buildSorryNotFoundLinks() {
        $(".info").hide();

        let text = '<p>Пока вы еще не заключили ни одной сделки. Примите участие в игре, чтобы создать свою сеть контактов.</p>'
        $(".linkNotFound").append(text);
    }

    $(document).ready(function () {
        GetUserNodes();
    });

    function buildGraph(links) {

        var nodes = {};

        // Compute the distinct nodes from the links.
        links.forEach(function (link) {
            link.source = nodes[link.SenderId] || (nodes[link.SenderId] = { name: link.SenderActiveProjectName, Id: url + link.SenderId });
            link.target = nodes[link.RecieverId] || (nodes[link.RecieverId] = { name: link.RecieverActiveProjectName, Id: url + link.RecieverId });
        });

        var width = $(window).width() * 0.83,
        height = window.screen.availHeight / 2;

       // console.log(width);

        var force = d3.layout.force()
            .nodes(d3.values(nodes))
            .links(links)
            .size([width, height])
            .linkDistance(60)
            .charge(-300)
            .on("tick", tick)
            .start();

        $("#project-graph").html("");
        var svg = d3.select("section").append("svg")
            .attr("width", width)
            .attr("height", height);

        var link = svg.selectAll(".link")
            .data(force.links())
            .enter().append("line")
            .attr("class", "link");

        var node = svg.selectAll(".node")
            .data(force.nodes())
            .enter().append("g")
            .attr("class", "node")
            .on("mouseover", mouseover)
            .on("mouseout", mouseout)
            .call(force.drag)

        node.append("circle")
            .on("click", function (d) { window.location.href = d.Id })
            .text(function (d) { return d.name; })
            .attr("r", 8);

        node.append("text")
            .attr("x", 12)
            .attr("dy", ".35em")
            //.text(function (d) { return d.name; });
            .text(d => `-- ${d.name}`);

        function tick() {
            link
                .attr("x1", function (d) { return d.source.x; })
                .attr("y1", function (d) { return d.source.y; })
                .attr("x2", function (d) { return d.target.x; })
                .attr("y2", function (d) { return d.target.y; });

            node
                .attr("transform", function (d) { return "translate(" + d.x + "," + d.y + ")"; });
        }

        function mouseover() {
            d3.select(this).select("circle").transition()
                .duration(750)
                .attr("r", 16);
        }

        function mouseout() {
            d3.select(this).select("circle").transition()
                .duration(750)
                .attr("r", 8);
        }
    }
</script>