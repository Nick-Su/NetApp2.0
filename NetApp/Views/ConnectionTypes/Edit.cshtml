@model NetApp.Models.ConnectionType

@{
    ViewBag.Title = "Редактирование";
}

<h2 class="text-primary">Редактирование</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ConnectionTypeId)
        @Html.HiddenFor(model => model.GameId)
        <input type="hidden" name="gid" id="gidField" />

        <div class="form-group">
            @Html.LabelFor(model => model.Decription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Decription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Decription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 col-xs-12">
                <input type="submit" value="Сохранить" class="btn btn-primary col-xs-12" />
            </div>
        </div>
    </div>
}

<div id="addBackLink" class="col-xs-12 nopadding"></div>
<br />
<br />


<script type="text/javascript">
    let searchParams = new URLSearchParams(window.location.search);
    searchParams.has('gid');
    let gid = searchParams.get('gid');

    let searchGameCode = new URLSearchParams(window.location.search);
    searchGameCode.has('gameCode');
    let gameCode = searchParams.get('gameCode');

    $('#gidField').val(gid);

    let classBackLink = "btn btn-sm btn-default col-xs-5";
    let backLink = '<a href="' + "/ConnectionTypes/Index/?gameCode=" + gameCode + "&gid=" + gid + '" class="' + classBackLink + '">Назад, к спиcку</a>';
    $("#addBackLink").append(backLink);
</script>