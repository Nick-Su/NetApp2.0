@model NetApp.Models.Project
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Добавить проект";
}
@{ 
    Layout = null;
}

    <div class="modal-content">
        <button class="close" data-dismiss="modal" area-hidden="true">X</button>
        <h2 class="modal-header">Добавить проект</h2>

        <input type="hidden" class="pageName" value="trustedPage" />
        <!--Html.Partial("_StatusBar")-->
        <div class="modal-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal modal-body">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { id = "Name", @class = "form-control maxMinWidth" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Whom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Whom, new { htmlAttributes = new { id = "Whom", @class = "form-control maxMinWidth" } })
                            @Html.ValidationMessageFor(model => model.Whom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.What, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.What, new { htmlAttributes = new { id = "What", @class = "form-control maxMinWidth" } })
                            @Html.ValidationMessageFor(model => model.What, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Feature, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Feature, new { htmlAttributes = new { id = "Feature", @class = "form-control maxMinWidth" } })
                            @Html.ValidationMessageFor(model => model.Feature, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { id = "Author", @class = "form-control maxMinWidth", @Value = @ViewBag.username } })
                            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { id = "Contact", @class = "form-control maxMinWidth", @Value = @User.Identity.GetUserName() } })
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10 ">
                            <input type="submit" value="Добавить" class="btn btn-success maxMinWidth" id="saveProject" />
                        </div>
                    </div>
                </div>
            }
        </div>

        <script>
        $("#saveProject").on("click", function () {
            let model = getModel();
            console.log(model);
            $.ajax({
                url: '@Url.Action("Save", "Projects")',
                type: 'POST',
                data: JSON.stringify(model),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                async: false,
                success: function () {
                    alert("Сохранение прошло успешно");
                },
                error: function (response) {
                    var msg = response.responseJSON.responseText;
                    alert("Что-то пошло не так!");
                    console.log(msg);
                }
            });
        });

        function getModel() {
            return { project: getData() };
        };
        function getData() {
            return {
                Name: $("#Name").val(),
                Whom: $("#Whom").val(),
                What: $("#What").val(),
                Feature: $("#Feature").val(),
                Author: $("#Author").val(),
                Contact: $("#Contact").val(),
            };
        };
        </script>
    </div>
